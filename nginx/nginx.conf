user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # 과다 요청 제한 관련
    limit_req_zone $binary_remote_addr zone=general_access:10m rate=30r/m;  # General access limit
    limit_req_zone $binary_remote_addr zone=api_access:10m rate=60r/m;      # API access limit
    limit_req_zone $binary_remote_addr zone=stream_access:5m rate=5r/m;     # Stream access limit    
    
    server {
        listen 80;
        server_name i12a202.p.ssafy.io;

        # # HTTP에서 HTTPS로 리디렉션
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name i12a202.p.ssafy.io;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        # SSL 인증서 경로
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        
        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        
        # Backend
        location /api {
            # Apply rate limiting for API access
            # Allows burst of 20 requests, with nodelay to reject excess requests immediately
            limit_req zone=api_access burst=20 nodelay;
            
            proxy_pass http://backend:8080/api;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Return 429 (Too Many Requests) error for rate-limited requests
            limit_req_status 429;
        }

        # Embedded Stream with strict rate limiting
        location /stream {
            # Apply strict rate limiting for stream access
            # Lower rate and burst since streaming typically uses more bandwidth
            limit_req zone=stream_access burst=5 nodelay;
            
            proxy_pass http://embedded:8765/barebone/camera/stream;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Disable buffering to support continuous streaming
            proxy_buffering off;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # Increase timeouts if needed
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # Return 429 (Too Many Requests) error for rate-limited requests
            limit_req_status 429;
        }

        # Embedded (Websocket) - no rate limiting applied as it's a persistent connection
        location /socket.io/ {
            proxy_pass http://embedded:8765/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            # Optional: If using WebSocket ping/pong
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
        }

        # Frontend with general rate limiting
        location / {
            # Apply general rate limiting
            limit_req zone=general_access burst=30 nodelay;
            
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Return 429 (Too Many Requests) error for rate-limited requests
            limit_req_status 429;
             location ~ /\.(git|svn|hg) {
                deny all;
                return 404;
            }
        }
        
        # 보안: 부정 엑세스 방지
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}